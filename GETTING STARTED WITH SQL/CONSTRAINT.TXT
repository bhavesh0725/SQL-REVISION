Constraints
Constraints provide details about the usage of a column and are applied after specifying the column's data type.
They enable the database to reject any inserted data that violates a particular constraint.
The following statement is used to impose constraints on the "employee" table.

Below is the query to create a table student with a set of constraints.

     CREATE TABLE  student(
     student_id INTEGER PRIMARY KEY,
     student_Name TEXT UNIQUE,
     Department TEXT NOT NULL); 
PRIMARY KEY can be utilized to uniquely identify a row in a table.
When attempting to insert a row with the same value as an existing row in the table, a constraint violation will occur, preventing the insertion of the new row.
UNIQUE columns contain distinct values for each row, similar to "PRIMARY KEY" columns, but unlike primary key columns, a table can have multiple unique columns..
NOT NULL columns must have a value assigned to them.
When attempting to insert a row without providing a value for a "NOT NULL" column, a constraint violation will occur, preventing the insertion of the new row.
QUE 1. Task
Write a query to create a table employee with the mentioned constraints on the columns :

employee_id - INTEGER PRIMARY KEY,
employee_Name - TEXT UNIQUE,
Department - TEXT NOT NULL


SOL:
create table employee (employee_id int PRIMARY KEY, employee_name text UNIQUE, Department text not NULL);



QUE 2.
Debug this query
The Query written in the console is trying to insert data to the table employee.
Debug this query to run the problem successfully.

Don’t worry about the actual values as long as you get the query to run.
Your database is named 'employee' and has the following columns

Id PRIMARY KEY(INT)
Name (TEXT),
Age (INT),
Address UNIQUE (TEXT)


SOL:
/* Debug this query to run the problem successfully. 
- Don’t worry about the actual values as long as you get the query to run. */

INSERT INTO employee (Id ,Name ,Age ,Address)
VALUES  (1, 'John Smith', 25,  '123 Main St'),
        (2, 'Sarah Johnson', 30,'456 Broadway'),
        (3, 'Michael Brown', 45,  '123 nonmain St'),
        (4, 'Jessica Davis', 28,  '321 Elm St');
        
/* mistake  I did 
When you use the INSERT INTO statement, you generally don't repeat the column constraints such as primary key or unique. Instead, you just provide the values for the columns in the correct order.
*/

